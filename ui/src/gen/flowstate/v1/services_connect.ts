// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file flowstate/v1/services.proto (package flowstate.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Command, StateCtx } from "./messages_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service flowstate.v1.Driver
 */
export const Driver = {
  typeName: "flowstate.v1.Driver",
  methods: {
    /**
     * @generated from rpc flowstate.v1.Driver.Do
     */
    do: {
      name: "Do",
      I: Command,
      O: Command,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc flowstate.v1.Driver.GetStateByID
     */
    getStateByID: {
      name: "GetStateByID",
      I: Command,
      O: Command,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc flowstate.v1.Driver.GetStateByLabels
     */
    getStateByLabels: {
      name: "GetStateByLabels",
      I: Command,
      O: Command,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc flowstate.v1.Driver.GetStates
     */
    getStates: {
      name: "GetStates",
      I: Command,
      O: Command,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc flowstate.v1.Driver.GetDelayedStates
     */
    getDelayedStates: {
      name: "GetDelayedStates",
      I: Command,
      O: Command,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc flowstate.v1.Driver.Delay
     */
    delay: {
      name: "Delay",
      I: Command,
      O: Command,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc flowstate.v1.Driver.Commit
     */
    commit: {
      name: "Commit",
      I: Command,
      O: Command,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc flowstate.v1.Driver.GetData
     */
    getData: {
      name: "GetData",
      I: Command,
      O: Command,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc flowstate.v1.Driver.StoreData
     */
    storeData: {
      name: "StoreData",
      I: Command,
      O: Command,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * @generated from service flowstate.v1.Flow
 */
export const Flow = {
  typeName: "flowstate.v1.Flow",
  methods: {
    /**
     * @generated from rpc flowstate.v1.Flow.Execute
     */
    execute: {
      name: "Execute",
      I: StateCtx,
      O: Command,
      kind: MethodKind.Unary,
    },
  }
} as const;

